
stm32f10ec8t6-udemy.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000c08  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000d38  08000d40  00010d40  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000d38  08000d38  00010d40  2**0
                  CONTENTS
  4 .ARM          00000000  08000d38  08000d38  00010d40  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000d38  08000d40  00010d40  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000d38  08000d38  00010d38  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000d3c  08000d3c  00010d3c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010d40  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000000  08000d40  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000020  08000d40  00020020  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00010d40  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00010d69  2**0
                  CONTENTS, READONLY
 13 .debug_info   000009db  00000000  00000000  00010dac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000034d  00000000  00000000  00011787  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000d0  00000000  00000000  00011ad8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000108  00000000  00000000  00011ba8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002090  00000000  00000000  00011cb0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000113d  00000000  00000000  00013d40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000847e  00000000  00000000  00014e7d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000278  00000000  00000000  0001d2fc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000069  00000000  00000000  0001d574  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	08000d20 	.word	0x08000d20

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	08000d20 	.word	0x08000d20

08000170 <GPIOClockControl>:

/// @brief GPIO clock control
/// @param pGPIOx 
/// @param status 
void GPIOClockControl(GPIO_RegDef_t *pGPIOx, uint8_t status)
{
 8000170:	b480      	push	{r7}
 8000172:	b083      	sub	sp, #12
 8000174:	af00      	add	r7, sp, #0
 8000176:	6078      	str	r0, [r7, #4]
 8000178:	460b      	mov	r3, r1
 800017a:	70fb      	strb	r3, [r7, #3]
    if(status==ENABLE)
 800017c:	78fb      	ldrb	r3, [r7, #3]
 800017e:	2b01      	cmp	r3, #1
 8000180:	d14c      	bne.n	800021c <GPIOClockControl+0xac>
    {
        if(pGPIOx == GPIOA)
 8000182:	687b      	ldr	r3, [r7, #4]
 8000184:	4a4f      	ldr	r2, [pc, #316]	; (80002c4 <GPIOClockControl+0x154>)
 8000186:	4293      	cmp	r3, r2
 8000188:	d106      	bne.n	8000198 <GPIOClockControl+0x28>
        {
            GPIOA_CLOCK_EN();
 800018a:	4b4f      	ldr	r3, [pc, #316]	; (80002c8 <GPIOClockControl+0x158>)
 800018c:	699b      	ldr	r3, [r3, #24]
 800018e:	4a4e      	ldr	r2, [pc, #312]	; (80002c8 <GPIOClockControl+0x158>)
 8000190:	f043 0304 	orr.w	r3, r3, #4
 8000194:	6193      	str	r3, [r2, #24]
        else if(pGPIOx == GPIOG)
        {
            GPIOG_CLOCK_DS();
        }
    }
}
 8000196:	e090      	b.n	80002ba <GPIOClockControl+0x14a>
        else if(pGPIOx == GPIOB)
 8000198:	687b      	ldr	r3, [r7, #4]
 800019a:	4a4c      	ldr	r2, [pc, #304]	; (80002cc <GPIOClockControl+0x15c>)
 800019c:	4293      	cmp	r3, r2
 800019e:	d106      	bne.n	80001ae <GPIOClockControl+0x3e>
            GPIOB_CLOCK_EN();
 80001a0:	4b49      	ldr	r3, [pc, #292]	; (80002c8 <GPIOClockControl+0x158>)
 80001a2:	699b      	ldr	r3, [r3, #24]
 80001a4:	4a48      	ldr	r2, [pc, #288]	; (80002c8 <GPIOClockControl+0x158>)
 80001a6:	f043 0308 	orr.w	r3, r3, #8
 80001aa:	6193      	str	r3, [r2, #24]
}
 80001ac:	e085      	b.n	80002ba <GPIOClockControl+0x14a>
        else if(pGPIOx == GPIOC)
 80001ae:	687b      	ldr	r3, [r7, #4]
 80001b0:	4a47      	ldr	r2, [pc, #284]	; (80002d0 <GPIOClockControl+0x160>)
 80001b2:	4293      	cmp	r3, r2
 80001b4:	d106      	bne.n	80001c4 <GPIOClockControl+0x54>
            GPIOC_CLOCK_EN();
 80001b6:	4b44      	ldr	r3, [pc, #272]	; (80002c8 <GPIOClockControl+0x158>)
 80001b8:	699b      	ldr	r3, [r3, #24]
 80001ba:	4a43      	ldr	r2, [pc, #268]	; (80002c8 <GPIOClockControl+0x158>)
 80001bc:	f043 0310 	orr.w	r3, r3, #16
 80001c0:	6193      	str	r3, [r2, #24]
}
 80001c2:	e07a      	b.n	80002ba <GPIOClockControl+0x14a>
        else if(pGPIOx == GPIOD)
 80001c4:	687b      	ldr	r3, [r7, #4]
 80001c6:	4a43      	ldr	r2, [pc, #268]	; (80002d4 <GPIOClockControl+0x164>)
 80001c8:	4293      	cmp	r3, r2
 80001ca:	d106      	bne.n	80001da <GPIOClockControl+0x6a>
            GPIOD_CLOCK_EN();
 80001cc:	4b3e      	ldr	r3, [pc, #248]	; (80002c8 <GPIOClockControl+0x158>)
 80001ce:	699b      	ldr	r3, [r3, #24]
 80001d0:	4a3d      	ldr	r2, [pc, #244]	; (80002c8 <GPIOClockControl+0x158>)
 80001d2:	f043 0320 	orr.w	r3, r3, #32
 80001d6:	6193      	str	r3, [r2, #24]
}
 80001d8:	e06f      	b.n	80002ba <GPIOClockControl+0x14a>
        else if(pGPIOx == GPIOE)
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	4a3e      	ldr	r2, [pc, #248]	; (80002d8 <GPIOClockControl+0x168>)
 80001de:	4293      	cmp	r3, r2
 80001e0:	d106      	bne.n	80001f0 <GPIOClockControl+0x80>
            GPIOE_CLOCK_EN();
 80001e2:	4b39      	ldr	r3, [pc, #228]	; (80002c8 <GPIOClockControl+0x158>)
 80001e4:	699b      	ldr	r3, [r3, #24]
 80001e6:	4a38      	ldr	r2, [pc, #224]	; (80002c8 <GPIOClockControl+0x158>)
 80001e8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80001ec:	6193      	str	r3, [r2, #24]
}
 80001ee:	e064      	b.n	80002ba <GPIOClockControl+0x14a>
        else if(pGPIOx == GPIOF)
 80001f0:	687b      	ldr	r3, [r7, #4]
 80001f2:	4a3a      	ldr	r2, [pc, #232]	; (80002dc <GPIOClockControl+0x16c>)
 80001f4:	4293      	cmp	r3, r2
 80001f6:	d106      	bne.n	8000206 <GPIOClockControl+0x96>
            GPIOF_CLOCK_EN();
 80001f8:	4b33      	ldr	r3, [pc, #204]	; (80002c8 <GPIOClockControl+0x158>)
 80001fa:	699b      	ldr	r3, [r3, #24]
 80001fc:	4a32      	ldr	r2, [pc, #200]	; (80002c8 <GPIOClockControl+0x158>)
 80001fe:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000202:	6193      	str	r3, [r2, #24]
}
 8000204:	e059      	b.n	80002ba <GPIOClockControl+0x14a>
        else if(pGPIOx == GPIOG)
 8000206:	687b      	ldr	r3, [r7, #4]
 8000208:	4a35      	ldr	r2, [pc, #212]	; (80002e0 <GPIOClockControl+0x170>)
 800020a:	4293      	cmp	r3, r2
 800020c:	d155      	bne.n	80002ba <GPIOClockControl+0x14a>
            GPIOG_CLOCK_EN();
 800020e:	4b2e      	ldr	r3, [pc, #184]	; (80002c8 <GPIOClockControl+0x158>)
 8000210:	699b      	ldr	r3, [r3, #24]
 8000212:	4a2d      	ldr	r2, [pc, #180]	; (80002c8 <GPIOClockControl+0x158>)
 8000214:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000218:	6193      	str	r3, [r2, #24]
}
 800021a:	e04e      	b.n	80002ba <GPIOClockControl+0x14a>
    else if(status==DISABLE)
 800021c:	78fb      	ldrb	r3, [r7, #3]
 800021e:	2b00      	cmp	r3, #0
 8000220:	d14b      	bne.n	80002ba <GPIOClockControl+0x14a>
        if(pGPIOx == GPIOA)
 8000222:	687b      	ldr	r3, [r7, #4]
 8000224:	4a27      	ldr	r2, [pc, #156]	; (80002c4 <GPIOClockControl+0x154>)
 8000226:	4293      	cmp	r3, r2
 8000228:	d106      	bne.n	8000238 <GPIOClockControl+0xc8>
            GPIOA_CLOCK_DS();
 800022a:	4b27      	ldr	r3, [pc, #156]	; (80002c8 <GPIOClockControl+0x158>)
 800022c:	699b      	ldr	r3, [r3, #24]
 800022e:	4a26      	ldr	r2, [pc, #152]	; (80002c8 <GPIOClockControl+0x158>)
 8000230:	f023 0304 	bic.w	r3, r3, #4
 8000234:	6193      	str	r3, [r2, #24]
}
 8000236:	e040      	b.n	80002ba <GPIOClockControl+0x14a>
        else if(pGPIOx == GPIOB)
 8000238:	687b      	ldr	r3, [r7, #4]
 800023a:	4a24      	ldr	r2, [pc, #144]	; (80002cc <GPIOClockControl+0x15c>)
 800023c:	4293      	cmp	r3, r2
 800023e:	d106      	bne.n	800024e <GPIOClockControl+0xde>
            GPIOB_CLOCK_DS();
 8000240:	4b21      	ldr	r3, [pc, #132]	; (80002c8 <GPIOClockControl+0x158>)
 8000242:	699b      	ldr	r3, [r3, #24]
 8000244:	4a20      	ldr	r2, [pc, #128]	; (80002c8 <GPIOClockControl+0x158>)
 8000246:	f023 0308 	bic.w	r3, r3, #8
 800024a:	6193      	str	r3, [r2, #24]
}
 800024c:	e035      	b.n	80002ba <GPIOClockControl+0x14a>
        else if(pGPIOx == GPIOC)
 800024e:	687b      	ldr	r3, [r7, #4]
 8000250:	4a1f      	ldr	r2, [pc, #124]	; (80002d0 <GPIOClockControl+0x160>)
 8000252:	4293      	cmp	r3, r2
 8000254:	d106      	bne.n	8000264 <GPIOClockControl+0xf4>
            GPIOC_CLOCK_DS();
 8000256:	4b1c      	ldr	r3, [pc, #112]	; (80002c8 <GPIOClockControl+0x158>)
 8000258:	699b      	ldr	r3, [r3, #24]
 800025a:	4a1b      	ldr	r2, [pc, #108]	; (80002c8 <GPIOClockControl+0x158>)
 800025c:	f023 0310 	bic.w	r3, r3, #16
 8000260:	6193      	str	r3, [r2, #24]
}
 8000262:	e02a      	b.n	80002ba <GPIOClockControl+0x14a>
        else if(pGPIOx == GPIOD)
 8000264:	687b      	ldr	r3, [r7, #4]
 8000266:	4a1b      	ldr	r2, [pc, #108]	; (80002d4 <GPIOClockControl+0x164>)
 8000268:	4293      	cmp	r3, r2
 800026a:	d106      	bne.n	800027a <GPIOClockControl+0x10a>
            GPIOD_CLOCK_DS();
 800026c:	4b16      	ldr	r3, [pc, #88]	; (80002c8 <GPIOClockControl+0x158>)
 800026e:	699b      	ldr	r3, [r3, #24]
 8000270:	4a15      	ldr	r2, [pc, #84]	; (80002c8 <GPIOClockControl+0x158>)
 8000272:	f023 0320 	bic.w	r3, r3, #32
 8000276:	6193      	str	r3, [r2, #24]
}
 8000278:	e01f      	b.n	80002ba <GPIOClockControl+0x14a>
        else if(pGPIOx == GPIOE)
 800027a:	687b      	ldr	r3, [r7, #4]
 800027c:	4a16      	ldr	r2, [pc, #88]	; (80002d8 <GPIOClockControl+0x168>)
 800027e:	4293      	cmp	r3, r2
 8000280:	d106      	bne.n	8000290 <GPIOClockControl+0x120>
            GPIOE_CLOCK_DS();
 8000282:	4b11      	ldr	r3, [pc, #68]	; (80002c8 <GPIOClockControl+0x158>)
 8000284:	699b      	ldr	r3, [r3, #24]
 8000286:	4a10      	ldr	r2, [pc, #64]	; (80002c8 <GPIOClockControl+0x158>)
 8000288:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800028c:	6193      	str	r3, [r2, #24]
}
 800028e:	e014      	b.n	80002ba <GPIOClockControl+0x14a>
        else if(pGPIOx == GPIOF)
 8000290:	687b      	ldr	r3, [r7, #4]
 8000292:	4a12      	ldr	r2, [pc, #72]	; (80002dc <GPIOClockControl+0x16c>)
 8000294:	4293      	cmp	r3, r2
 8000296:	d106      	bne.n	80002a6 <GPIOClockControl+0x136>
            GPIOF_CLOCK_DS();
 8000298:	4b0b      	ldr	r3, [pc, #44]	; (80002c8 <GPIOClockControl+0x158>)
 800029a:	699b      	ldr	r3, [r3, #24]
 800029c:	4a0a      	ldr	r2, [pc, #40]	; (80002c8 <GPIOClockControl+0x158>)
 800029e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80002a2:	6193      	str	r3, [r2, #24]
}
 80002a4:	e009      	b.n	80002ba <GPIOClockControl+0x14a>
        else if(pGPIOx == GPIOG)
 80002a6:	687b      	ldr	r3, [r7, #4]
 80002a8:	4a0d      	ldr	r2, [pc, #52]	; (80002e0 <GPIOClockControl+0x170>)
 80002aa:	4293      	cmp	r3, r2
 80002ac:	d105      	bne.n	80002ba <GPIOClockControl+0x14a>
            GPIOG_CLOCK_DS();
 80002ae:	4b06      	ldr	r3, [pc, #24]	; (80002c8 <GPIOClockControl+0x158>)
 80002b0:	699b      	ldr	r3, [r3, #24]
 80002b2:	4a05      	ldr	r2, [pc, #20]	; (80002c8 <GPIOClockControl+0x158>)
 80002b4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80002b8:	6193      	str	r3, [r2, #24]
}
 80002ba:	bf00      	nop
 80002bc:	370c      	adds	r7, #12
 80002be:	46bd      	mov	sp, r7
 80002c0:	bc80      	pop	{r7}
 80002c2:	4770      	bx	lr
 80002c4:	40010800 	.word	0x40010800
 80002c8:	40021000 	.word	0x40021000
 80002cc:	40010c00 	.word	0x40010c00
 80002d0:	40011000 	.word	0x40011000
 80002d4:	40011400 	.word	0x40011400
 80002d8:	40011800 	.word	0x40011800
 80002dc:	40011c00 	.word	0x40011c00
 80002e0:	40012000 	.word	0x40012000

080002e4 <GPIOInit>:
/// @brief GPIO initialization
/// @param pGPIOx 
/// @param mode 
/// @param speed 
void GPIOInit(GPIO_Handler_t *GPIO_conf)
{
 80002e4:	b480      	push	{r7}
 80002e6:	b089      	sub	sp, #36	; 0x24
 80002e8:	af00      	add	r7, sp, #0
 80002ea:	6078      	str	r0, [r7, #4]
   
    if (GPIO_conf->GPIO_PinCOnfig.PinMode == output_push_pull)
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	795b      	ldrb	r3, [r3, #5]
 80002f0:	2b00      	cmp	r3, #0
 80002f2:	d149      	bne.n	8000388 <GPIOInit+0xa4>
    {
   

        if  (GPIO_conf->GPIO_PinCOnfig.PinNumber>7)
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	791b      	ldrb	r3, [r3, #4]
 80002f8:	2b07      	cmp	r3, #7
 80002fa:	d91f      	bls.n	800033c <GPIOInit+0x58>
        {
            // set GIO mode CONF
            GPIO_conf->pGPIOx->GPIO_CRH &= ~(1<<(4*(GPIO_conf->GPIO_PinCOnfig.PinNumber)-30));
 80002fc:	687b      	ldr	r3, [r7, #4]
 80002fe:	681b      	ldr	r3, [r3, #0]
 8000300:	685a      	ldr	r2, [r3, #4]
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	791b      	ldrb	r3, [r3, #4]
 8000306:	009b      	lsls	r3, r3, #2
 8000308:	3b1e      	subs	r3, #30
 800030a:	2101      	movs	r1, #1
 800030c:	fa01 f303 	lsl.w	r3, r1, r3
 8000310:	43db      	mvns	r3, r3
 8000312:	4619      	mov	r1, r3
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	681b      	ldr	r3, [r3, #0]
 8000318:	400a      	ands	r2, r1
 800031a:	605a      	str	r2, [r3, #4]
            
            // set gpio speed MODE
            GPIO_conf->pGPIOx->GPIO_CRH |= (1<<(4*(GPIO_conf->GPIO_PinCOnfig.PinNumber)-REGISTER_SIZE));
 800031c:	687b      	ldr	r3, [r7, #4]
 800031e:	681b      	ldr	r3, [r3, #0]
 8000320:	685a      	ldr	r2, [r3, #4]
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	791b      	ldrb	r3, [r3, #4]
 8000326:	3b08      	subs	r3, #8
 8000328:	009b      	lsls	r3, r3, #2
 800032a:	2101      	movs	r1, #1
 800032c:	fa01 f303 	lsl.w	r3, r1, r3
 8000330:	4619      	mov	r1, r3
 8000332:	687b      	ldr	r3, [r7, #4]
 8000334:	681b      	ldr	r3, [r3, #0]
 8000336:	430a      	orrs	r2, r1
 8000338:	605a      	str	r2, [r3, #4]
        }
            
    }

    
}
 800033a:	e342      	b.n	80009c2 <GPIOInit+0x6de>
        else if  (GPIO_conf->GPIO_PinCOnfig.PinNumber <= 7)
 800033c:	687b      	ldr	r3, [r7, #4]
 800033e:	791b      	ldrb	r3, [r3, #4]
 8000340:	2b07      	cmp	r3, #7
 8000342:	f200 833e 	bhi.w	80009c2 <GPIOInit+0x6de>
            GPIO_conf->pGPIOx->GPIO_CRL &= ~(1<<(4*(GPIO_conf->GPIO_PinCOnfig.PinNumber)+2));
 8000346:	687b      	ldr	r3, [r7, #4]
 8000348:	681b      	ldr	r3, [r3, #0]
 800034a:	681a      	ldr	r2, [r3, #0]
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	791b      	ldrb	r3, [r3, #4]
 8000350:	009b      	lsls	r3, r3, #2
 8000352:	3302      	adds	r3, #2
 8000354:	2101      	movs	r1, #1
 8000356:	fa01 f303 	lsl.w	r3, r1, r3
 800035a:	43db      	mvns	r3, r3
 800035c:	4619      	mov	r1, r3
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	681b      	ldr	r3, [r3, #0]
 8000362:	400a      	ands	r2, r1
 8000364:	601a      	str	r2, [r3, #0]
            GPIO_conf->pGPIOx->GPIO_CRL |= (GPIO_conf->GPIO_PinCOnfig.PinSpeed<<(4*(GPIO_conf->GPIO_PinCOnfig.PinNumber)));
 8000366:	687b      	ldr	r3, [r7, #4]
 8000368:	681b      	ldr	r3, [r3, #0]
 800036a:	681a      	ldr	r2, [r3, #0]
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	799b      	ldrb	r3, [r3, #6]
 8000370:	4619      	mov	r1, r3
 8000372:	687b      	ldr	r3, [r7, #4]
 8000374:	791b      	ldrb	r3, [r3, #4]
 8000376:	009b      	lsls	r3, r3, #2
 8000378:	fa01 f303 	lsl.w	r3, r1, r3
 800037c:	4619      	mov	r1, r3
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	681b      	ldr	r3, [r3, #0]
 8000382:	430a      	orrs	r2, r1
 8000384:	601a      	str	r2, [r3, #0]
}
 8000386:	e31c      	b.n	80009c2 <GPIOInit+0x6de>
    else if (GPIO_conf->GPIO_PinCOnfig.PinMode == output_open_drain)
 8000388:	687b      	ldr	r3, [r7, #4]
 800038a:	795b      	ldrb	r3, [r3, #5]
 800038c:	2b01      	cmp	r3, #1
 800038e:	d14c      	bne.n	800042a <GPIOInit+0x146>
        if  (GPIO_conf->GPIO_PinCOnfig.PinNumber>7)
 8000390:	687b      	ldr	r3, [r7, #4]
 8000392:	791b      	ldrb	r3, [r3, #4]
 8000394:	2b07      	cmp	r3, #7
 8000396:	d921      	bls.n	80003dc <GPIOInit+0xf8>
            GPIO_conf->pGPIOx->GPIO_CRH |= (1<<(4*(GPIO_conf->GPIO_PinCOnfig.PinNumber)-REGISTER_SIZE-2));
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	681b      	ldr	r3, [r3, #0]
 800039c:	685a      	ldr	r2, [r3, #4]
 800039e:	687b      	ldr	r3, [r7, #4]
 80003a0:	791b      	ldrb	r3, [r3, #4]
 80003a2:	3b08      	subs	r3, #8
 80003a4:	009b      	lsls	r3, r3, #2
 80003a6:	3b02      	subs	r3, #2
 80003a8:	2101      	movs	r1, #1
 80003aa:	fa01 f303 	lsl.w	r3, r1, r3
 80003ae:	4619      	mov	r1, r3
 80003b0:	687b      	ldr	r3, [r7, #4]
 80003b2:	681b      	ldr	r3, [r3, #0]
 80003b4:	430a      	orrs	r2, r1
 80003b6:	605a      	str	r2, [r3, #4]
            GPIO_conf->pGPIOx->GPIO_CRH |= (GPIO_conf->GPIO_PinCOnfig.PinSpeed<<(4*(GPIO_conf->GPIO_PinCOnfig.PinNumber)-REGISTER_SIZE));
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	681b      	ldr	r3, [r3, #0]
 80003bc:	685a      	ldr	r2, [r3, #4]
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	799b      	ldrb	r3, [r3, #6]
 80003c2:	4619      	mov	r1, r3
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	791b      	ldrb	r3, [r3, #4]
 80003c8:	3b08      	subs	r3, #8
 80003ca:	009b      	lsls	r3, r3, #2
 80003cc:	fa01 f303 	lsl.w	r3, r1, r3
 80003d0:	4619      	mov	r1, r3
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	681b      	ldr	r3, [r3, #0]
 80003d6:	430a      	orrs	r2, r1
 80003d8:	605a      	str	r2, [r3, #4]
}
 80003da:	e2f2      	b.n	80009c2 <GPIOInit+0x6de>
        else if  (GPIO_conf->GPIO_PinCOnfig.PinNumber <= 7)
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	791b      	ldrb	r3, [r3, #4]
 80003e0:	2b07      	cmp	r3, #7
 80003e2:	f200 82ee 	bhi.w	80009c2 <GPIOInit+0x6de>
            GPIO_conf->pGPIOx->GPIO_CRL |= (GPIO_conf->GPIO_PinCOnfig.PinMode<<(4*(GPIO_conf->GPIO_PinCOnfig.PinNumber)+2));
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	681b      	ldr	r3, [r3, #0]
 80003ea:	681a      	ldr	r2, [r3, #0]
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	795b      	ldrb	r3, [r3, #5]
 80003f0:	4619      	mov	r1, r3
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	791b      	ldrb	r3, [r3, #4]
 80003f6:	009b      	lsls	r3, r3, #2
 80003f8:	3302      	adds	r3, #2
 80003fa:	fa01 f303 	lsl.w	r3, r1, r3
 80003fe:	4619      	mov	r1, r3
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	681b      	ldr	r3, [r3, #0]
 8000404:	430a      	orrs	r2, r1
 8000406:	601a      	str	r2, [r3, #0]
            GPIO_conf->pGPIOx->GPIO_CRL |= (GPIO_conf->GPIO_PinCOnfig.PinSpeed<<(4*(GPIO_conf->GPIO_PinCOnfig.PinNumber)));
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	681b      	ldr	r3, [r3, #0]
 800040c:	681a      	ldr	r2, [r3, #0]
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	799b      	ldrb	r3, [r3, #6]
 8000412:	4619      	mov	r1, r3
 8000414:	687b      	ldr	r3, [r7, #4]
 8000416:	791b      	ldrb	r3, [r3, #4]
 8000418:	009b      	lsls	r3, r3, #2
 800041a:	fa01 f303 	lsl.w	r3, r1, r3
 800041e:	4619      	mov	r1, r3
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	681b      	ldr	r3, [r3, #0]
 8000424:	430a      	orrs	r2, r1
 8000426:	601a      	str	r2, [r3, #0]
}
 8000428:	e2cb      	b.n	80009c2 <GPIOInit+0x6de>
    else if(GPIO_conf->GPIO_PinCOnfig.PinMode == input_floating || GPIO_conf->GPIO_PinCOnfig.PinMode == input_pullup_pull_down)
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	795b      	ldrb	r3, [r3, #5]
 800042e:	2b01      	cmp	r3, #1
 8000430:	d003      	beq.n	800043a <GPIOInit+0x156>
 8000432:	687b      	ldr	r3, [r7, #4]
 8000434:	795b      	ldrb	r3, [r3, #5]
 8000436:	2b02      	cmp	r3, #2
 8000438:	d14b      	bne.n	80004d2 <GPIOInit+0x1ee>
        if  (GPIO_conf->GPIO_PinCOnfig.PinNumber>7)
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	791b      	ldrb	r3, [r3, #4]
 800043e:	2b07      	cmp	r3, #7
 8000440:	d922      	bls.n	8000488 <GPIOInit+0x1a4>
            GPIO_conf->pGPIOx->GPIO_CRH |= (GPIO_conf->GPIO_PinCOnfig.PinMode<<(4*(GPIO_conf->GPIO_PinCOnfig.PinNumber)-REGISTER_SIZE-2));
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	681b      	ldr	r3, [r3, #0]
 8000446:	685a      	ldr	r2, [r3, #4]
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	795b      	ldrb	r3, [r3, #5]
 800044c:	4619      	mov	r1, r3
 800044e:	687b      	ldr	r3, [r7, #4]
 8000450:	791b      	ldrb	r3, [r3, #4]
 8000452:	3b08      	subs	r3, #8
 8000454:	009b      	lsls	r3, r3, #2
 8000456:	3b02      	subs	r3, #2
 8000458:	fa01 f303 	lsl.w	r3, r1, r3
 800045c:	4619      	mov	r1, r3
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	681b      	ldr	r3, [r3, #0]
 8000462:	430a      	orrs	r2, r1
 8000464:	605a      	str	r2, [r3, #4]
            GPIO_conf->pGPIOx->GPIO_CRH &= ~(1<<(4*(GPIO_conf->GPIO_PinCOnfig.PinNumber)-REGISTER_SIZE));
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	681b      	ldr	r3, [r3, #0]
 800046a:	685a      	ldr	r2, [r3, #4]
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	791b      	ldrb	r3, [r3, #4]
 8000470:	3b08      	subs	r3, #8
 8000472:	009b      	lsls	r3, r3, #2
 8000474:	2101      	movs	r1, #1
 8000476:	fa01 f303 	lsl.w	r3, r1, r3
 800047a:	43db      	mvns	r3, r3
 800047c:	4619      	mov	r1, r3
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	681b      	ldr	r3, [r3, #0]
 8000482:	400a      	ands	r2, r1
 8000484:	605a      	str	r2, [r3, #4]
        if  (GPIO_conf->GPIO_PinCOnfig.PinNumber>7)
 8000486:	e29b      	b.n	80009c0 <GPIOInit+0x6dc>
        else if  (GPIO_conf->GPIO_PinCOnfig.PinNumber <= 7)
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	791b      	ldrb	r3, [r3, #4]
 800048c:	2b07      	cmp	r3, #7
 800048e:	f200 8297 	bhi.w	80009c0 <GPIOInit+0x6dc>
        	GPIO_conf->pGPIOx->GPIO_CRL &= ~(1<<2);
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	681b      	ldr	r3, [r3, #0]
 8000496:	681a      	ldr	r2, [r3, #0]
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	681b      	ldr	r3, [r3, #0]
 800049c:	f022 0204 	bic.w	r2, r2, #4
 80004a0:	601a      	str	r2, [r3, #0]
        	GPIO_conf->pGPIOx->GPIO_CRL |=  (2<<2);
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	681b      	ldr	r3, [r3, #0]
 80004a6:	681a      	ldr	r2, [r3, #0]
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	681b      	ldr	r3, [r3, #0]
 80004ac:	f042 0208 	orr.w	r2, r2, #8
 80004b0:	601a      	str	r2, [r3, #0]
            GPIO_conf->pGPIOx->GPIO_CRL &= ~(1<<(4*(GPIO_conf->GPIO_PinCOnfig.PinNumber)));
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	681b      	ldr	r3, [r3, #0]
 80004b6:	681a      	ldr	r2, [r3, #0]
 80004b8:	687b      	ldr	r3, [r7, #4]
 80004ba:	791b      	ldrb	r3, [r3, #4]
 80004bc:	009b      	lsls	r3, r3, #2
 80004be:	2101      	movs	r1, #1
 80004c0:	fa01 f303 	lsl.w	r3, r1, r3
 80004c4:	43db      	mvns	r3, r3
 80004c6:	4619      	mov	r1, r3
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	681b      	ldr	r3, [r3, #0]
 80004cc:	400a      	ands	r2, r1
 80004ce:	601a      	str	r2, [r3, #0]
        if  (GPIO_conf->GPIO_PinCOnfig.PinNumber>7)
 80004d0:	e276      	b.n	80009c0 <GPIOInit+0x6dc>
    else if( GPIO_conf->GPIO_PinCOnfig.PinMode == IT_FT)
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	795b      	ldrb	r3, [r3, #5]
 80004d6:	2b03      	cmp	r3, #3
 80004d8:	f040 80c8 	bne.w	800066c <GPIOInit+0x388>
        EXTI->exti_FTSR |= (1<<GPIO_conf->GPIO_PinCOnfig.PinNumber);
 80004dc:	4b9d      	ldr	r3, [pc, #628]	; (8000754 <GPIOInit+0x470>)
 80004de:	68db      	ldr	r3, [r3, #12]
 80004e0:	687a      	ldr	r2, [r7, #4]
 80004e2:	7912      	ldrb	r2, [r2, #4]
 80004e4:	4611      	mov	r1, r2
 80004e6:	2201      	movs	r2, #1
 80004e8:	408a      	lsls	r2, r1
 80004ea:	4611      	mov	r1, r2
 80004ec:	4a99      	ldr	r2, [pc, #612]	; (8000754 <GPIOInit+0x470>)
 80004ee:	430b      	orrs	r3, r1
 80004f0:	60d3      	str	r3, [r2, #12]
        EXTI->exti_RTSR &= ~(1<<GPIO_conf->GPIO_PinCOnfig.PinNumber);
 80004f2:	4b98      	ldr	r3, [pc, #608]	; (8000754 <GPIOInit+0x470>)
 80004f4:	689b      	ldr	r3, [r3, #8]
 80004f6:	687a      	ldr	r2, [r7, #4]
 80004f8:	7912      	ldrb	r2, [r2, #4]
 80004fa:	4611      	mov	r1, r2
 80004fc:	2201      	movs	r2, #1
 80004fe:	408a      	lsls	r2, r1
 8000500:	43d2      	mvns	r2, r2
 8000502:	4611      	mov	r1, r2
 8000504:	4a93      	ldr	r2, [pc, #588]	; (8000754 <GPIOInit+0x470>)
 8000506:	400b      	ands	r3, r1
 8000508:	6093      	str	r3, [r2, #8]
        EXTI->exti_IMR |= (1<<GPIO_conf->GPIO_PinCOnfig.PinNumber);
 800050a:	4b92      	ldr	r3, [pc, #584]	; (8000754 <GPIOInit+0x470>)
 800050c:	681b      	ldr	r3, [r3, #0]
 800050e:	687a      	ldr	r2, [r7, #4]
 8000510:	7912      	ldrb	r2, [r2, #4]
 8000512:	4611      	mov	r1, r2
 8000514:	2201      	movs	r2, #1
 8000516:	408a      	lsls	r2, r1
 8000518:	4611      	mov	r1, r2
 800051a:	4a8e      	ldr	r2, [pc, #568]	; (8000754 <GPIOInit+0x470>)
 800051c:	430b      	orrs	r3, r1
 800051e:	6013      	str	r3, [r2, #0]
        uint32_t temp1 = GPIO_conf->GPIO_PinCOnfig.PinNumber/4;
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	791b      	ldrb	r3, [r3, #4]
 8000524:	089b      	lsrs	r3, r3, #2
 8000526:	b2db      	uxtb	r3, r3
 8000528:	60fb      	str	r3, [r7, #12]
        uint32_t temp2 = GPIO_conf->GPIO_PinCOnfig.PinNumber%4;
 800052a:	687b      	ldr	r3, [r7, #4]
 800052c:	791b      	ldrb	r3, [r3, #4]
 800052e:	f003 0303 	and.w	r3, r3, #3
 8000532:	60bb      	str	r3, [r7, #8]
        if(GPIO_conf->pGPIOx == GPIOA)
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	681b      	ldr	r3, [r3, #0]
 8000538:	4a87      	ldr	r2, [pc, #540]	; (8000758 <GPIOInit+0x474>)
 800053a:	4293      	cmp	r3, r2
 800053c:	d111      	bne.n	8000562 <GPIOInit+0x27e>
            AFIO->AFIO_EXTICR[temp1] &= ~(1<<4*temp2);
 800053e:	4a87      	ldr	r2, [pc, #540]	; (800075c <GPIOInit+0x478>)
 8000540:	68fb      	ldr	r3, [r7, #12]
 8000542:	3302      	adds	r3, #2
 8000544:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000548:	68ba      	ldr	r2, [r7, #8]
 800054a:	0092      	lsls	r2, r2, #2
 800054c:	2101      	movs	r1, #1
 800054e:	fa01 f202 	lsl.w	r2, r1, r2
 8000552:	43d2      	mvns	r2, r2
 8000554:	4981      	ldr	r1, [pc, #516]	; (800075c <GPIOInit+0x478>)
 8000556:	401a      	ands	r2, r3
 8000558:	68fb      	ldr	r3, [r7, #12]
 800055a:	3302      	adds	r3, #2
 800055c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8000560:	e22f      	b.n	80009c2 <GPIOInit+0x6de>
        else if(GPIO_conf->pGPIOx == GPIOB)
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	681b      	ldr	r3, [r3, #0]
 8000566:	4a7e      	ldr	r2, [pc, #504]	; (8000760 <GPIOInit+0x47c>)
 8000568:	4293      	cmp	r3, r2
 800056a:	d110      	bne.n	800058e <GPIOInit+0x2aa>
            AFIO->AFIO_EXTICR[temp1] |= (1<<4*temp2);
 800056c:	4a7b      	ldr	r2, [pc, #492]	; (800075c <GPIOInit+0x478>)
 800056e:	68fb      	ldr	r3, [r7, #12]
 8000570:	3302      	adds	r3, #2
 8000572:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000576:	68ba      	ldr	r2, [r7, #8]
 8000578:	0092      	lsls	r2, r2, #2
 800057a:	2101      	movs	r1, #1
 800057c:	fa01 f202 	lsl.w	r2, r1, r2
 8000580:	4976      	ldr	r1, [pc, #472]	; (800075c <GPIOInit+0x478>)
 8000582:	431a      	orrs	r2, r3
 8000584:	68fb      	ldr	r3, [r7, #12]
 8000586:	3302      	adds	r3, #2
 8000588:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800058c:	e219      	b.n	80009c2 <GPIOInit+0x6de>
        else if(GPIO_conf->pGPIOx == GPIOC)
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	681b      	ldr	r3, [r3, #0]
 8000592:	4a74      	ldr	r2, [pc, #464]	; (8000764 <GPIOInit+0x480>)
 8000594:	4293      	cmp	r3, r2
 8000596:	d110      	bne.n	80005ba <GPIOInit+0x2d6>
            AFIO->AFIO_EXTICR[temp1] |= (2<<4*temp2);
 8000598:	4a70      	ldr	r2, [pc, #448]	; (800075c <GPIOInit+0x478>)
 800059a:	68fb      	ldr	r3, [r7, #12]
 800059c:	3302      	adds	r3, #2
 800059e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80005a2:	68ba      	ldr	r2, [r7, #8]
 80005a4:	0092      	lsls	r2, r2, #2
 80005a6:	2102      	movs	r1, #2
 80005a8:	fa01 f202 	lsl.w	r2, r1, r2
 80005ac:	496b      	ldr	r1, [pc, #428]	; (800075c <GPIOInit+0x478>)
 80005ae:	431a      	orrs	r2, r3
 80005b0:	68fb      	ldr	r3, [r7, #12]
 80005b2:	3302      	adds	r3, #2
 80005b4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80005b8:	e203      	b.n	80009c2 <GPIOInit+0x6de>
        else if(GPIO_conf->pGPIOx == GPIOD)
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	681b      	ldr	r3, [r3, #0]
 80005be:	4a6a      	ldr	r2, [pc, #424]	; (8000768 <GPIOInit+0x484>)
 80005c0:	4293      	cmp	r3, r2
 80005c2:	d110      	bne.n	80005e6 <GPIOInit+0x302>
            AFIO->AFIO_EXTICR[temp1] |= (3<<4*temp2);
 80005c4:	4a65      	ldr	r2, [pc, #404]	; (800075c <GPIOInit+0x478>)
 80005c6:	68fb      	ldr	r3, [r7, #12]
 80005c8:	3302      	adds	r3, #2
 80005ca:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80005ce:	68ba      	ldr	r2, [r7, #8]
 80005d0:	0092      	lsls	r2, r2, #2
 80005d2:	2103      	movs	r1, #3
 80005d4:	fa01 f202 	lsl.w	r2, r1, r2
 80005d8:	4960      	ldr	r1, [pc, #384]	; (800075c <GPIOInit+0x478>)
 80005da:	431a      	orrs	r2, r3
 80005dc:	68fb      	ldr	r3, [r7, #12]
 80005de:	3302      	adds	r3, #2
 80005e0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80005e4:	e1ed      	b.n	80009c2 <GPIOInit+0x6de>
        else if(GPIO_conf->pGPIOx == GPIOE)
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	681b      	ldr	r3, [r3, #0]
 80005ea:	4a60      	ldr	r2, [pc, #384]	; (800076c <GPIOInit+0x488>)
 80005ec:	4293      	cmp	r3, r2
 80005ee:	d110      	bne.n	8000612 <GPIOInit+0x32e>
            AFIO->AFIO_EXTICR[temp1] |= (4<<4*temp2);
 80005f0:	4a5a      	ldr	r2, [pc, #360]	; (800075c <GPIOInit+0x478>)
 80005f2:	68fb      	ldr	r3, [r7, #12]
 80005f4:	3302      	adds	r3, #2
 80005f6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80005fa:	68ba      	ldr	r2, [r7, #8]
 80005fc:	0092      	lsls	r2, r2, #2
 80005fe:	2104      	movs	r1, #4
 8000600:	fa01 f202 	lsl.w	r2, r1, r2
 8000604:	4955      	ldr	r1, [pc, #340]	; (800075c <GPIOInit+0x478>)
 8000606:	431a      	orrs	r2, r3
 8000608:	68fb      	ldr	r3, [r7, #12]
 800060a:	3302      	adds	r3, #2
 800060c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8000610:	e1d7      	b.n	80009c2 <GPIOInit+0x6de>
        else if(GPIO_conf->pGPIOx == GPIOF)
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	681b      	ldr	r3, [r3, #0]
 8000616:	4a56      	ldr	r2, [pc, #344]	; (8000770 <GPIOInit+0x48c>)
 8000618:	4293      	cmp	r3, r2
 800061a:	d110      	bne.n	800063e <GPIOInit+0x35a>
            AFIO->AFIO_EXTICR[temp1] |= (5<<4*temp2);
 800061c:	4a4f      	ldr	r2, [pc, #316]	; (800075c <GPIOInit+0x478>)
 800061e:	68fb      	ldr	r3, [r7, #12]
 8000620:	3302      	adds	r3, #2
 8000622:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000626:	68ba      	ldr	r2, [r7, #8]
 8000628:	0092      	lsls	r2, r2, #2
 800062a:	2105      	movs	r1, #5
 800062c:	fa01 f202 	lsl.w	r2, r1, r2
 8000630:	494a      	ldr	r1, [pc, #296]	; (800075c <GPIOInit+0x478>)
 8000632:	431a      	orrs	r2, r3
 8000634:	68fb      	ldr	r3, [r7, #12]
 8000636:	3302      	adds	r3, #2
 8000638:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800063c:	e1c1      	b.n	80009c2 <GPIOInit+0x6de>
        else if(GPIO_conf->pGPIOx == GPIOG)
 800063e:	687b      	ldr	r3, [r7, #4]
 8000640:	681b      	ldr	r3, [r3, #0]
 8000642:	4a4c      	ldr	r2, [pc, #304]	; (8000774 <GPIOInit+0x490>)
 8000644:	4293      	cmp	r3, r2
 8000646:	f040 81bc 	bne.w	80009c2 <GPIOInit+0x6de>
            AFIO->AFIO_EXTICR[temp1] |= (6<<4*temp2);
 800064a:	4a44      	ldr	r2, [pc, #272]	; (800075c <GPIOInit+0x478>)
 800064c:	68fb      	ldr	r3, [r7, #12]
 800064e:	3302      	adds	r3, #2
 8000650:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000654:	68ba      	ldr	r2, [r7, #8]
 8000656:	0092      	lsls	r2, r2, #2
 8000658:	2106      	movs	r1, #6
 800065a:	fa01 f202 	lsl.w	r2, r1, r2
 800065e:	493f      	ldr	r1, [pc, #252]	; (800075c <GPIOInit+0x478>)
 8000660:	431a      	orrs	r2, r3
 8000662:	68fb      	ldr	r3, [r7, #12]
 8000664:	3302      	adds	r3, #2
 8000666:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800066a:	e1aa      	b.n	80009c2 <GPIOInit+0x6de>
    else if( GPIO_conf->GPIO_PinCOnfig.PinMode == IT_RT)
 800066c:	687b      	ldr	r3, [r7, #4]
 800066e:	795b      	ldrb	r3, [r3, #5]
 8000670:	2b04      	cmp	r3, #4
 8000672:	f040 80da 	bne.w	800082a <GPIOInit+0x546>
        EXTI->exti_RTSR |= (1<<GPIO_conf->GPIO_PinCOnfig.PinNumber);
 8000676:	4b37      	ldr	r3, [pc, #220]	; (8000754 <GPIOInit+0x470>)
 8000678:	689b      	ldr	r3, [r3, #8]
 800067a:	687a      	ldr	r2, [r7, #4]
 800067c:	7912      	ldrb	r2, [r2, #4]
 800067e:	4611      	mov	r1, r2
 8000680:	2201      	movs	r2, #1
 8000682:	408a      	lsls	r2, r1
 8000684:	4611      	mov	r1, r2
 8000686:	4a33      	ldr	r2, [pc, #204]	; (8000754 <GPIOInit+0x470>)
 8000688:	430b      	orrs	r3, r1
 800068a:	6093      	str	r3, [r2, #8]
        EXTI->exti_FTSR &= ~(1<<GPIO_conf->GPIO_PinCOnfig.PinNumber);
 800068c:	4b31      	ldr	r3, [pc, #196]	; (8000754 <GPIOInit+0x470>)
 800068e:	68db      	ldr	r3, [r3, #12]
 8000690:	687a      	ldr	r2, [r7, #4]
 8000692:	7912      	ldrb	r2, [r2, #4]
 8000694:	4611      	mov	r1, r2
 8000696:	2201      	movs	r2, #1
 8000698:	408a      	lsls	r2, r1
 800069a:	43d2      	mvns	r2, r2
 800069c:	4611      	mov	r1, r2
 800069e:	4a2d      	ldr	r2, [pc, #180]	; (8000754 <GPIOInit+0x470>)
 80006a0:	400b      	ands	r3, r1
 80006a2:	60d3      	str	r3, [r2, #12]
        EXTI->exti_IMR |= (1<<GPIO_conf->GPIO_PinCOnfig.PinNumber);
 80006a4:	4b2b      	ldr	r3, [pc, #172]	; (8000754 <GPIOInit+0x470>)
 80006a6:	681b      	ldr	r3, [r3, #0]
 80006a8:	687a      	ldr	r2, [r7, #4]
 80006aa:	7912      	ldrb	r2, [r2, #4]
 80006ac:	4611      	mov	r1, r2
 80006ae:	2201      	movs	r2, #1
 80006b0:	408a      	lsls	r2, r1
 80006b2:	4611      	mov	r1, r2
 80006b4:	4a27      	ldr	r2, [pc, #156]	; (8000754 <GPIOInit+0x470>)
 80006b6:	430b      	orrs	r3, r1
 80006b8:	6013      	str	r3, [r2, #0]
        uint32_t temp1 = GPIO_conf->GPIO_PinCOnfig.PinNumber/4;
 80006ba:	687b      	ldr	r3, [r7, #4]
 80006bc:	791b      	ldrb	r3, [r3, #4]
 80006be:	089b      	lsrs	r3, r3, #2
 80006c0:	b2db      	uxtb	r3, r3
 80006c2:	617b      	str	r3, [r7, #20]
        uint32_t temp2 = GPIO_conf->GPIO_PinCOnfig.PinNumber%4;
 80006c4:	687b      	ldr	r3, [r7, #4]
 80006c6:	791b      	ldrb	r3, [r3, #4]
 80006c8:	f003 0303 	and.w	r3, r3, #3
 80006cc:	613b      	str	r3, [r7, #16]
        if(GPIO_conf->pGPIOx == GPIOA)
 80006ce:	687b      	ldr	r3, [r7, #4]
 80006d0:	681b      	ldr	r3, [r3, #0]
 80006d2:	4a21      	ldr	r2, [pc, #132]	; (8000758 <GPIOInit+0x474>)
 80006d4:	4293      	cmp	r3, r2
 80006d6:	d111      	bne.n	80006fc <GPIOInit+0x418>
            AFIO->AFIO_EXTICR[temp1] &= ~(1<<4*temp2);
 80006d8:	4a20      	ldr	r2, [pc, #128]	; (800075c <GPIOInit+0x478>)
 80006da:	697b      	ldr	r3, [r7, #20]
 80006dc:	3302      	adds	r3, #2
 80006de:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80006e2:	693a      	ldr	r2, [r7, #16]
 80006e4:	0092      	lsls	r2, r2, #2
 80006e6:	2101      	movs	r1, #1
 80006e8:	fa01 f202 	lsl.w	r2, r1, r2
 80006ec:	43d2      	mvns	r2, r2
 80006ee:	491b      	ldr	r1, [pc, #108]	; (800075c <GPIOInit+0x478>)
 80006f0:	401a      	ands	r2, r3
 80006f2:	697b      	ldr	r3, [r7, #20]
 80006f4:	3302      	adds	r3, #2
 80006f6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80006fa:	e162      	b.n	80009c2 <GPIOInit+0x6de>
        else if(GPIO_conf->pGPIOx == GPIOB)
 80006fc:	687b      	ldr	r3, [r7, #4]
 80006fe:	681b      	ldr	r3, [r3, #0]
 8000700:	4a17      	ldr	r2, [pc, #92]	; (8000760 <GPIOInit+0x47c>)
 8000702:	4293      	cmp	r3, r2
 8000704:	d110      	bne.n	8000728 <GPIOInit+0x444>
            AFIO->AFIO_EXTICR[temp1] |= (1<<4*temp2);
 8000706:	4a15      	ldr	r2, [pc, #84]	; (800075c <GPIOInit+0x478>)
 8000708:	697b      	ldr	r3, [r7, #20]
 800070a:	3302      	adds	r3, #2
 800070c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000710:	693a      	ldr	r2, [r7, #16]
 8000712:	0092      	lsls	r2, r2, #2
 8000714:	2101      	movs	r1, #1
 8000716:	fa01 f202 	lsl.w	r2, r1, r2
 800071a:	4910      	ldr	r1, [pc, #64]	; (800075c <GPIOInit+0x478>)
 800071c:	431a      	orrs	r2, r3
 800071e:	697b      	ldr	r3, [r7, #20]
 8000720:	3302      	adds	r3, #2
 8000722:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8000726:	e14c      	b.n	80009c2 <GPIOInit+0x6de>
        else if(GPIO_conf->pGPIOx == GPIOC)
 8000728:	687b      	ldr	r3, [r7, #4]
 800072a:	681b      	ldr	r3, [r3, #0]
 800072c:	4a0d      	ldr	r2, [pc, #52]	; (8000764 <GPIOInit+0x480>)
 800072e:	4293      	cmp	r3, r2
 8000730:	d122      	bne.n	8000778 <GPIOInit+0x494>
            AFIO->AFIO_EXTICR[temp1] |= (2<<4*temp2);
 8000732:	4a0a      	ldr	r2, [pc, #40]	; (800075c <GPIOInit+0x478>)
 8000734:	697b      	ldr	r3, [r7, #20]
 8000736:	3302      	adds	r3, #2
 8000738:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800073c:	693a      	ldr	r2, [r7, #16]
 800073e:	0092      	lsls	r2, r2, #2
 8000740:	2102      	movs	r1, #2
 8000742:	fa01 f202 	lsl.w	r2, r1, r2
 8000746:	4905      	ldr	r1, [pc, #20]	; (800075c <GPIOInit+0x478>)
 8000748:	431a      	orrs	r2, r3
 800074a:	697b      	ldr	r3, [r7, #20]
 800074c:	3302      	adds	r3, #2
 800074e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8000752:	e136      	b.n	80009c2 <GPIOInit+0x6de>
 8000754:	40010400 	.word	0x40010400
 8000758:	40010800 	.word	0x40010800
 800075c:	40010000 	.word	0x40010000
 8000760:	40010c00 	.word	0x40010c00
 8000764:	40011000 	.word	0x40011000
 8000768:	40011400 	.word	0x40011400
 800076c:	40011800 	.word	0x40011800
 8000770:	40011c00 	.word	0x40011c00
 8000774:	40012000 	.word	0x40012000
        else if(GPIO_conf->pGPIOx == GPIOD)
 8000778:	687b      	ldr	r3, [r7, #4]
 800077a:	681b      	ldr	r3, [r3, #0]
 800077c:	4a93      	ldr	r2, [pc, #588]	; (80009cc <GPIOInit+0x6e8>)
 800077e:	4293      	cmp	r3, r2
 8000780:	d110      	bne.n	80007a4 <GPIOInit+0x4c0>
            AFIO->AFIO_EXTICR[temp1] |= (3<<4*temp2);
 8000782:	4a93      	ldr	r2, [pc, #588]	; (80009d0 <GPIOInit+0x6ec>)
 8000784:	697b      	ldr	r3, [r7, #20]
 8000786:	3302      	adds	r3, #2
 8000788:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800078c:	693a      	ldr	r2, [r7, #16]
 800078e:	0092      	lsls	r2, r2, #2
 8000790:	2103      	movs	r1, #3
 8000792:	fa01 f202 	lsl.w	r2, r1, r2
 8000796:	498e      	ldr	r1, [pc, #568]	; (80009d0 <GPIOInit+0x6ec>)
 8000798:	431a      	orrs	r2, r3
 800079a:	697b      	ldr	r3, [r7, #20]
 800079c:	3302      	adds	r3, #2
 800079e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80007a2:	e10e      	b.n	80009c2 <GPIOInit+0x6de>
        else if(GPIO_conf->pGPIOx == GPIOE)
 80007a4:	687b      	ldr	r3, [r7, #4]
 80007a6:	681b      	ldr	r3, [r3, #0]
 80007a8:	4a8a      	ldr	r2, [pc, #552]	; (80009d4 <GPIOInit+0x6f0>)
 80007aa:	4293      	cmp	r3, r2
 80007ac:	d110      	bne.n	80007d0 <GPIOInit+0x4ec>
            AFIO->AFIO_EXTICR[temp1] |= (4<<4*temp2);
 80007ae:	4a88      	ldr	r2, [pc, #544]	; (80009d0 <GPIOInit+0x6ec>)
 80007b0:	697b      	ldr	r3, [r7, #20]
 80007b2:	3302      	adds	r3, #2
 80007b4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80007b8:	693a      	ldr	r2, [r7, #16]
 80007ba:	0092      	lsls	r2, r2, #2
 80007bc:	2104      	movs	r1, #4
 80007be:	fa01 f202 	lsl.w	r2, r1, r2
 80007c2:	4983      	ldr	r1, [pc, #524]	; (80009d0 <GPIOInit+0x6ec>)
 80007c4:	431a      	orrs	r2, r3
 80007c6:	697b      	ldr	r3, [r7, #20]
 80007c8:	3302      	adds	r3, #2
 80007ca:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80007ce:	e0f8      	b.n	80009c2 <GPIOInit+0x6de>
        else if(GPIO_conf->pGPIOx == GPIOF)
 80007d0:	687b      	ldr	r3, [r7, #4]
 80007d2:	681b      	ldr	r3, [r3, #0]
 80007d4:	4a80      	ldr	r2, [pc, #512]	; (80009d8 <GPIOInit+0x6f4>)
 80007d6:	4293      	cmp	r3, r2
 80007d8:	d110      	bne.n	80007fc <GPIOInit+0x518>
            AFIO->AFIO_EXTICR[temp1] |= (5<<4*temp2);
 80007da:	4a7d      	ldr	r2, [pc, #500]	; (80009d0 <GPIOInit+0x6ec>)
 80007dc:	697b      	ldr	r3, [r7, #20]
 80007de:	3302      	adds	r3, #2
 80007e0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80007e4:	693a      	ldr	r2, [r7, #16]
 80007e6:	0092      	lsls	r2, r2, #2
 80007e8:	2105      	movs	r1, #5
 80007ea:	fa01 f202 	lsl.w	r2, r1, r2
 80007ee:	4978      	ldr	r1, [pc, #480]	; (80009d0 <GPIOInit+0x6ec>)
 80007f0:	431a      	orrs	r2, r3
 80007f2:	697b      	ldr	r3, [r7, #20]
 80007f4:	3302      	adds	r3, #2
 80007f6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80007fa:	e0e2      	b.n	80009c2 <GPIOInit+0x6de>
        else if(GPIO_conf->pGPIOx == GPIOG)
 80007fc:	687b      	ldr	r3, [r7, #4]
 80007fe:	681b      	ldr	r3, [r3, #0]
 8000800:	4a76      	ldr	r2, [pc, #472]	; (80009dc <GPIOInit+0x6f8>)
 8000802:	4293      	cmp	r3, r2
 8000804:	f040 80dd 	bne.w	80009c2 <GPIOInit+0x6de>
            AFIO->AFIO_EXTICR[temp1] |= (6<<4*temp2);
 8000808:	4a71      	ldr	r2, [pc, #452]	; (80009d0 <GPIOInit+0x6ec>)
 800080a:	697b      	ldr	r3, [r7, #20]
 800080c:	3302      	adds	r3, #2
 800080e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000812:	693a      	ldr	r2, [r7, #16]
 8000814:	0092      	lsls	r2, r2, #2
 8000816:	2106      	movs	r1, #6
 8000818:	fa01 f202 	lsl.w	r2, r1, r2
 800081c:	496c      	ldr	r1, [pc, #432]	; (80009d0 <GPIOInit+0x6ec>)
 800081e:	431a      	orrs	r2, r3
 8000820:	697b      	ldr	r3, [r7, #20]
 8000822:	3302      	adds	r3, #2
 8000824:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8000828:	e0cb      	b.n	80009c2 <GPIOInit+0x6de>
    else if( GPIO_conf->GPIO_PinCOnfig.PinMode == IT_RFT)
 800082a:	687b      	ldr	r3, [r7, #4]
 800082c:	795b      	ldrb	r3, [r3, #5]
 800082e:	2b05      	cmp	r3, #5
 8000830:	f040 80c7 	bne.w	80009c2 <GPIOInit+0x6de>
        EXTI->exti_RTSR |= (1<<GPIO_conf->GPIO_PinCOnfig.PinNumber);
 8000834:	4b6a      	ldr	r3, [pc, #424]	; (80009e0 <GPIOInit+0x6fc>)
 8000836:	689b      	ldr	r3, [r3, #8]
 8000838:	687a      	ldr	r2, [r7, #4]
 800083a:	7912      	ldrb	r2, [r2, #4]
 800083c:	4611      	mov	r1, r2
 800083e:	2201      	movs	r2, #1
 8000840:	408a      	lsls	r2, r1
 8000842:	4611      	mov	r1, r2
 8000844:	4a66      	ldr	r2, [pc, #408]	; (80009e0 <GPIOInit+0x6fc>)
 8000846:	430b      	orrs	r3, r1
 8000848:	6093      	str	r3, [r2, #8]
        EXTI->exti_FTSR |= (1<<GPIO_conf->GPIO_PinCOnfig.PinNumber);
 800084a:	4b65      	ldr	r3, [pc, #404]	; (80009e0 <GPIOInit+0x6fc>)
 800084c:	68db      	ldr	r3, [r3, #12]
 800084e:	687a      	ldr	r2, [r7, #4]
 8000850:	7912      	ldrb	r2, [r2, #4]
 8000852:	4611      	mov	r1, r2
 8000854:	2201      	movs	r2, #1
 8000856:	408a      	lsls	r2, r1
 8000858:	4611      	mov	r1, r2
 800085a:	4a61      	ldr	r2, [pc, #388]	; (80009e0 <GPIOInit+0x6fc>)
 800085c:	430b      	orrs	r3, r1
 800085e:	60d3      	str	r3, [r2, #12]
        EXTI->exti_IMR |= (1<<GPIO_conf->GPIO_PinCOnfig.PinNumber);
 8000860:	4b5f      	ldr	r3, [pc, #380]	; (80009e0 <GPIOInit+0x6fc>)
 8000862:	681b      	ldr	r3, [r3, #0]
 8000864:	687a      	ldr	r2, [r7, #4]
 8000866:	7912      	ldrb	r2, [r2, #4]
 8000868:	4611      	mov	r1, r2
 800086a:	2201      	movs	r2, #1
 800086c:	408a      	lsls	r2, r1
 800086e:	4611      	mov	r1, r2
 8000870:	4a5b      	ldr	r2, [pc, #364]	; (80009e0 <GPIOInit+0x6fc>)
 8000872:	430b      	orrs	r3, r1
 8000874:	6013      	str	r3, [r2, #0]
        uint32_t temp1 = GPIO_conf->GPIO_PinCOnfig.PinNumber/4;
 8000876:	687b      	ldr	r3, [r7, #4]
 8000878:	791b      	ldrb	r3, [r3, #4]
 800087a:	089b      	lsrs	r3, r3, #2
 800087c:	b2db      	uxtb	r3, r3
 800087e:	61fb      	str	r3, [r7, #28]
        uint32_t temp2 = GPIO_conf->GPIO_PinCOnfig.PinNumber%4;
 8000880:	687b      	ldr	r3, [r7, #4]
 8000882:	791b      	ldrb	r3, [r3, #4]
 8000884:	f003 0303 	and.w	r3, r3, #3
 8000888:	61bb      	str	r3, [r7, #24]
        if(GPIO_conf->pGPIOx == GPIOA)
 800088a:	687b      	ldr	r3, [r7, #4]
 800088c:	681b      	ldr	r3, [r3, #0]
 800088e:	4a55      	ldr	r2, [pc, #340]	; (80009e4 <GPIOInit+0x700>)
 8000890:	4293      	cmp	r3, r2
 8000892:	d111      	bne.n	80008b8 <GPIOInit+0x5d4>
            AFIO->AFIO_EXTICR[temp1] &= ~(1<<4*temp2);
 8000894:	4a4e      	ldr	r2, [pc, #312]	; (80009d0 <GPIOInit+0x6ec>)
 8000896:	69fb      	ldr	r3, [r7, #28]
 8000898:	3302      	adds	r3, #2
 800089a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800089e:	69ba      	ldr	r2, [r7, #24]
 80008a0:	0092      	lsls	r2, r2, #2
 80008a2:	2101      	movs	r1, #1
 80008a4:	fa01 f202 	lsl.w	r2, r1, r2
 80008a8:	43d2      	mvns	r2, r2
 80008aa:	4949      	ldr	r1, [pc, #292]	; (80009d0 <GPIOInit+0x6ec>)
 80008ac:	401a      	ands	r2, r3
 80008ae:	69fb      	ldr	r3, [r7, #28]
 80008b0:	3302      	adds	r3, #2
 80008b2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80008b6:	e084      	b.n	80009c2 <GPIOInit+0x6de>
        else if(GPIO_conf->pGPIOx == GPIOB)
 80008b8:	687b      	ldr	r3, [r7, #4]
 80008ba:	681b      	ldr	r3, [r3, #0]
 80008bc:	4a4a      	ldr	r2, [pc, #296]	; (80009e8 <GPIOInit+0x704>)
 80008be:	4293      	cmp	r3, r2
 80008c0:	d110      	bne.n	80008e4 <GPIOInit+0x600>
            AFIO->AFIO_EXTICR[temp1] |= (1<<4*temp2);
 80008c2:	4a43      	ldr	r2, [pc, #268]	; (80009d0 <GPIOInit+0x6ec>)
 80008c4:	69fb      	ldr	r3, [r7, #28]
 80008c6:	3302      	adds	r3, #2
 80008c8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80008cc:	69ba      	ldr	r2, [r7, #24]
 80008ce:	0092      	lsls	r2, r2, #2
 80008d0:	2101      	movs	r1, #1
 80008d2:	fa01 f202 	lsl.w	r2, r1, r2
 80008d6:	493e      	ldr	r1, [pc, #248]	; (80009d0 <GPIOInit+0x6ec>)
 80008d8:	431a      	orrs	r2, r3
 80008da:	69fb      	ldr	r3, [r7, #28]
 80008dc:	3302      	adds	r3, #2
 80008de:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80008e2:	e06e      	b.n	80009c2 <GPIOInit+0x6de>
        else if(GPIO_conf->pGPIOx == GPIOC)
 80008e4:	687b      	ldr	r3, [r7, #4]
 80008e6:	681b      	ldr	r3, [r3, #0]
 80008e8:	4a40      	ldr	r2, [pc, #256]	; (80009ec <GPIOInit+0x708>)
 80008ea:	4293      	cmp	r3, r2
 80008ec:	d110      	bne.n	8000910 <GPIOInit+0x62c>
            AFIO->AFIO_EXTICR[temp1] |= (2<<4*temp2);
 80008ee:	4a38      	ldr	r2, [pc, #224]	; (80009d0 <GPIOInit+0x6ec>)
 80008f0:	69fb      	ldr	r3, [r7, #28]
 80008f2:	3302      	adds	r3, #2
 80008f4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80008f8:	69ba      	ldr	r2, [r7, #24]
 80008fa:	0092      	lsls	r2, r2, #2
 80008fc:	2102      	movs	r1, #2
 80008fe:	fa01 f202 	lsl.w	r2, r1, r2
 8000902:	4933      	ldr	r1, [pc, #204]	; (80009d0 <GPIOInit+0x6ec>)
 8000904:	431a      	orrs	r2, r3
 8000906:	69fb      	ldr	r3, [r7, #28]
 8000908:	3302      	adds	r3, #2
 800090a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800090e:	e058      	b.n	80009c2 <GPIOInit+0x6de>
        else if(GPIO_conf->pGPIOx == GPIOD)
 8000910:	687b      	ldr	r3, [r7, #4]
 8000912:	681b      	ldr	r3, [r3, #0]
 8000914:	4a2d      	ldr	r2, [pc, #180]	; (80009cc <GPIOInit+0x6e8>)
 8000916:	4293      	cmp	r3, r2
 8000918:	d110      	bne.n	800093c <GPIOInit+0x658>
            AFIO->AFIO_EXTICR[temp1] |= (3<<4*temp2);
 800091a:	4a2d      	ldr	r2, [pc, #180]	; (80009d0 <GPIOInit+0x6ec>)
 800091c:	69fb      	ldr	r3, [r7, #28]
 800091e:	3302      	adds	r3, #2
 8000920:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000924:	69ba      	ldr	r2, [r7, #24]
 8000926:	0092      	lsls	r2, r2, #2
 8000928:	2103      	movs	r1, #3
 800092a:	fa01 f202 	lsl.w	r2, r1, r2
 800092e:	4928      	ldr	r1, [pc, #160]	; (80009d0 <GPIOInit+0x6ec>)
 8000930:	431a      	orrs	r2, r3
 8000932:	69fb      	ldr	r3, [r7, #28]
 8000934:	3302      	adds	r3, #2
 8000936:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800093a:	e042      	b.n	80009c2 <GPIOInit+0x6de>
        else if(GPIO_conf->pGPIOx == GPIOE)
 800093c:	687b      	ldr	r3, [r7, #4]
 800093e:	681b      	ldr	r3, [r3, #0]
 8000940:	4a24      	ldr	r2, [pc, #144]	; (80009d4 <GPIOInit+0x6f0>)
 8000942:	4293      	cmp	r3, r2
 8000944:	d110      	bne.n	8000968 <GPIOInit+0x684>
            AFIO->AFIO_EXTICR[temp1] |= (4<<4*temp2);
 8000946:	4a22      	ldr	r2, [pc, #136]	; (80009d0 <GPIOInit+0x6ec>)
 8000948:	69fb      	ldr	r3, [r7, #28]
 800094a:	3302      	adds	r3, #2
 800094c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000950:	69ba      	ldr	r2, [r7, #24]
 8000952:	0092      	lsls	r2, r2, #2
 8000954:	2104      	movs	r1, #4
 8000956:	fa01 f202 	lsl.w	r2, r1, r2
 800095a:	491d      	ldr	r1, [pc, #116]	; (80009d0 <GPIOInit+0x6ec>)
 800095c:	431a      	orrs	r2, r3
 800095e:	69fb      	ldr	r3, [r7, #28]
 8000960:	3302      	adds	r3, #2
 8000962:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8000966:	e02c      	b.n	80009c2 <GPIOInit+0x6de>
        else if(GPIO_conf->pGPIOx == GPIOF)
 8000968:	687b      	ldr	r3, [r7, #4]
 800096a:	681b      	ldr	r3, [r3, #0]
 800096c:	4a1a      	ldr	r2, [pc, #104]	; (80009d8 <GPIOInit+0x6f4>)
 800096e:	4293      	cmp	r3, r2
 8000970:	d110      	bne.n	8000994 <GPIOInit+0x6b0>
            AFIO->AFIO_EXTICR[temp1] |= (5<<4*temp2);
 8000972:	4a17      	ldr	r2, [pc, #92]	; (80009d0 <GPIOInit+0x6ec>)
 8000974:	69fb      	ldr	r3, [r7, #28]
 8000976:	3302      	adds	r3, #2
 8000978:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800097c:	69ba      	ldr	r2, [r7, #24]
 800097e:	0092      	lsls	r2, r2, #2
 8000980:	2105      	movs	r1, #5
 8000982:	fa01 f202 	lsl.w	r2, r1, r2
 8000986:	4912      	ldr	r1, [pc, #72]	; (80009d0 <GPIOInit+0x6ec>)
 8000988:	431a      	orrs	r2, r3
 800098a:	69fb      	ldr	r3, [r7, #28]
 800098c:	3302      	adds	r3, #2
 800098e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8000992:	e016      	b.n	80009c2 <GPIOInit+0x6de>
        else if(GPIO_conf->pGPIOx == GPIOG)
 8000994:	687b      	ldr	r3, [r7, #4]
 8000996:	681b      	ldr	r3, [r3, #0]
 8000998:	4a10      	ldr	r2, [pc, #64]	; (80009dc <GPIOInit+0x6f8>)
 800099a:	4293      	cmp	r3, r2
 800099c:	d111      	bne.n	80009c2 <GPIOInit+0x6de>
            AFIO->AFIO_EXTICR[temp1] |= (6<<4*temp2);
 800099e:	4a0c      	ldr	r2, [pc, #48]	; (80009d0 <GPIOInit+0x6ec>)
 80009a0:	69fb      	ldr	r3, [r7, #28]
 80009a2:	3302      	adds	r3, #2
 80009a4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80009a8:	69ba      	ldr	r2, [r7, #24]
 80009aa:	0092      	lsls	r2, r2, #2
 80009ac:	2106      	movs	r1, #6
 80009ae:	fa01 f202 	lsl.w	r2, r1, r2
 80009b2:	4907      	ldr	r1, [pc, #28]	; (80009d0 <GPIOInit+0x6ec>)
 80009b4:	431a      	orrs	r2, r3
 80009b6:	69fb      	ldr	r3, [r7, #28]
 80009b8:	3302      	adds	r3, #2
 80009ba:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80009be:	e000      	b.n	80009c2 <GPIOInit+0x6de>
        if  (GPIO_conf->GPIO_PinCOnfig.PinNumber>7)
 80009c0:	bf00      	nop
}
 80009c2:	bf00      	nop
 80009c4:	3724      	adds	r7, #36	; 0x24
 80009c6:	46bd      	mov	sp, r7
 80009c8:	bc80      	pop	{r7}
 80009ca:	4770      	bx	lr
 80009cc:	40011400 	.word	0x40011400
 80009d0:	40010000 	.word	0x40010000
 80009d4:	40011800 	.word	0x40011800
 80009d8:	40011c00 	.word	0x40011c00
 80009dc:	40012000 	.word	0x40012000
 80009e0:	40010400 	.word	0x40010400
 80009e4:	40010800 	.word	0x40010800
 80009e8:	40010c00 	.word	0x40010c00
 80009ec:	40011000 	.word	0x40011000

080009f0 <GPIOToggle>:

/// @brief Toggle pin
/// @param pGPIOx 
/// @param pin 
void GPIOToggle(GPIO_RegDef_t *pGPIOx, uint8_t pin)
{
 80009f0:	b480      	push	{r7}
 80009f2:	b083      	sub	sp, #12
 80009f4:	af00      	add	r7, sp, #0
 80009f6:	6078      	str	r0, [r7, #4]
 80009f8:	460b      	mov	r3, r1
 80009fa:	70fb      	strb	r3, [r7, #3]
    pGPIOx->GPIO_ODR ^= (1<<pin);
 80009fc:	687b      	ldr	r3, [r7, #4]
 80009fe:	68db      	ldr	r3, [r3, #12]
 8000a00:	78fa      	ldrb	r2, [r7, #3]
 8000a02:	2101      	movs	r1, #1
 8000a04:	fa01 f202 	lsl.w	r2, r1, r2
 8000a08:	405a      	eors	r2, r3
 8000a0a:	687b      	ldr	r3, [r7, #4]
 8000a0c:	60da      	str	r2, [r3, #12]

}
 8000a0e:	bf00      	nop
 8000a10:	370c      	adds	r7, #12
 8000a12:	46bd      	mov	sp, r7
 8000a14:	bc80      	pop	{r7}
 8000a16:	4770      	bx	lr

08000a18 <GPIO_IRQConfig>:

void GPIO_IRQConfig(uint8_t IRQNumber, uint8_t IRQPriority, uint8_t EN)
{
 8000a18:	b580      	push	{r7, lr}
 8000a1a:	b082      	sub	sp, #8
 8000a1c:	af00      	add	r7, sp, #0
 8000a1e:	4603      	mov	r3, r0
 8000a20:	71fb      	strb	r3, [r7, #7]
 8000a22:	460b      	mov	r3, r1
 8000a24:	71bb      	strb	r3, [r7, #6]
 8000a26:	4613      	mov	r3, r2
 8000a28:	717b      	strb	r3, [r7, #5]
    if(EN==ENABLE)
 8000a2a:	797b      	ldrb	r3, [r7, #5]
 8000a2c:	2b01      	cmp	r3, #1
 8000a2e:	d139      	bne.n	8000aa4 <GPIO_IRQConfig+0x8c>
    {
        if(IRQNumber<=31)
 8000a30:	79fb      	ldrb	r3, [r7, #7]
 8000a32:	2b1f      	cmp	r3, #31
 8000a34:	d80a      	bhi.n	8000a4c <GPIO_IRQConfig+0x34>
        {
            *NVIC_ISER0 |= (1<<IRQNumber);
 8000a36:	4b37      	ldr	r3, [pc, #220]	; (8000b14 <GPIO_IRQConfig+0xfc>)
 8000a38:	681b      	ldr	r3, [r3, #0]
 8000a3a:	79fa      	ldrb	r2, [r7, #7]
 8000a3c:	2101      	movs	r1, #1
 8000a3e:	fa01 f202 	lsl.w	r2, r1, r2
 8000a42:	4611      	mov	r1, r2
 8000a44:	4a33      	ldr	r2, [pc, #204]	; (8000b14 <GPIO_IRQConfig+0xfc>)
 8000a46:	430b      	orrs	r3, r1
 8000a48:	6013      	str	r3, [r2, #0]
 8000a4a:	e024      	b.n	8000a96 <GPIO_IRQConfig+0x7e>
        }

        else if(IRQNumber > 31 && IRQNumber < 64)
 8000a4c:	79fb      	ldrb	r3, [r7, #7]
 8000a4e:	2b1f      	cmp	r3, #31
 8000a50:	d90f      	bls.n	8000a72 <GPIO_IRQConfig+0x5a>
 8000a52:	79fb      	ldrb	r3, [r7, #7]
 8000a54:	2b3f      	cmp	r3, #63	; 0x3f
 8000a56:	d80c      	bhi.n	8000a72 <GPIO_IRQConfig+0x5a>
        {
            *NVIC_ISER1 |= (1<<IRQNumber%32);
 8000a58:	4b2f      	ldr	r3, [pc, #188]	; (8000b18 <GPIO_IRQConfig+0x100>)
 8000a5a:	681b      	ldr	r3, [r3, #0]
 8000a5c:	79fa      	ldrb	r2, [r7, #7]
 8000a5e:	f002 021f 	and.w	r2, r2, #31
 8000a62:	2101      	movs	r1, #1
 8000a64:	fa01 f202 	lsl.w	r2, r1, r2
 8000a68:	4611      	mov	r1, r2
 8000a6a:	4a2b      	ldr	r2, [pc, #172]	; (8000b18 <GPIO_IRQConfig+0x100>)
 8000a6c:	430b      	orrs	r3, r1
 8000a6e:	6013      	str	r3, [r2, #0]
 8000a70:	e011      	b.n	8000a96 <GPIO_IRQConfig+0x7e>
        }

        else if(IRQNumber >= 64 && IRQNumber < 96)
 8000a72:	79fb      	ldrb	r3, [r7, #7]
 8000a74:	2b3f      	cmp	r3, #63	; 0x3f
 8000a76:	d90e      	bls.n	8000a96 <GPIO_IRQConfig+0x7e>
 8000a78:	79fb      	ldrb	r3, [r7, #7]
 8000a7a:	2b5f      	cmp	r3, #95	; 0x5f
 8000a7c:	d80b      	bhi.n	8000a96 <GPIO_IRQConfig+0x7e>
        {
            *NVIC_ISER2 |= (1<<IRQNumber%64);
 8000a7e:	4b27      	ldr	r3, [pc, #156]	; (8000b1c <GPIO_IRQConfig+0x104>)
 8000a80:	681b      	ldr	r3, [r3, #0]
 8000a82:	79fa      	ldrb	r2, [r7, #7]
 8000a84:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000a88:	2101      	movs	r1, #1
 8000a8a:	fa01 f202 	lsl.w	r2, r1, r2
 8000a8e:	4611      	mov	r1, r2
 8000a90:	4a22      	ldr	r2, [pc, #136]	; (8000b1c <GPIO_IRQConfig+0x104>)
 8000a92:	430b      	orrs	r3, r1
 8000a94:	6013      	str	r3, [r2, #0]
        }

        GPIO_IRQPriorityConfig(IRQNumber, IRQPriority);
 8000a96:	79ba      	ldrb	r2, [r7, #6]
 8000a98:	79fb      	ldrb	r3, [r7, #7]
 8000a9a:	4611      	mov	r1, r2
 8000a9c:	4618      	mov	r0, r3
 8000a9e:	f000 f841 	bl	8000b24 <GPIO_IRQPriorityConfig>
        else if(IRQNumber >= 64 && IRQNumber < 96)
        {
            *NVIC_ICER2 |= (1<<IRQNumber%64);
        }
    }
}
 8000aa2:	e032      	b.n	8000b0a <GPIO_IRQConfig+0xf2>
        if(IRQNumber<=31)
 8000aa4:	79fb      	ldrb	r3, [r7, #7]
 8000aa6:	2b1f      	cmp	r3, #31
 8000aa8:	d80a      	bhi.n	8000ac0 <GPIO_IRQConfig+0xa8>
            *NVIC_ICER0 |= (1<<IRQNumber);
 8000aaa:	4b1d      	ldr	r3, [pc, #116]	; (8000b20 <GPIO_IRQConfig+0x108>)
 8000aac:	681b      	ldr	r3, [r3, #0]
 8000aae:	79fa      	ldrb	r2, [r7, #7]
 8000ab0:	2101      	movs	r1, #1
 8000ab2:	fa01 f202 	lsl.w	r2, r1, r2
 8000ab6:	4611      	mov	r1, r2
 8000ab8:	4a19      	ldr	r2, [pc, #100]	; (8000b20 <GPIO_IRQConfig+0x108>)
 8000aba:	430b      	orrs	r3, r1
 8000abc:	6013      	str	r3, [r2, #0]
}
 8000abe:	e024      	b.n	8000b0a <GPIO_IRQConfig+0xf2>
        else if(IRQNumber > 31 && IRQNumber < 64)
 8000ac0:	79fb      	ldrb	r3, [r7, #7]
 8000ac2:	2b1f      	cmp	r3, #31
 8000ac4:	d90f      	bls.n	8000ae6 <GPIO_IRQConfig+0xce>
 8000ac6:	79fb      	ldrb	r3, [r7, #7]
 8000ac8:	2b3f      	cmp	r3, #63	; 0x3f
 8000aca:	d80c      	bhi.n	8000ae6 <GPIO_IRQConfig+0xce>
            *NVIC_ICER1 |= (1<<IRQNumber%32);
 8000acc:	4b12      	ldr	r3, [pc, #72]	; (8000b18 <GPIO_IRQConfig+0x100>)
 8000ace:	681b      	ldr	r3, [r3, #0]
 8000ad0:	79fa      	ldrb	r2, [r7, #7]
 8000ad2:	f002 021f 	and.w	r2, r2, #31
 8000ad6:	2101      	movs	r1, #1
 8000ad8:	fa01 f202 	lsl.w	r2, r1, r2
 8000adc:	4611      	mov	r1, r2
 8000ade:	4a0e      	ldr	r2, [pc, #56]	; (8000b18 <GPIO_IRQConfig+0x100>)
 8000ae0:	430b      	orrs	r3, r1
 8000ae2:	6013      	str	r3, [r2, #0]
}
 8000ae4:	e011      	b.n	8000b0a <GPIO_IRQConfig+0xf2>
        else if(IRQNumber >= 64 && IRQNumber < 96)
 8000ae6:	79fb      	ldrb	r3, [r7, #7]
 8000ae8:	2b3f      	cmp	r3, #63	; 0x3f
 8000aea:	d90e      	bls.n	8000b0a <GPIO_IRQConfig+0xf2>
 8000aec:	79fb      	ldrb	r3, [r7, #7]
 8000aee:	2b5f      	cmp	r3, #95	; 0x5f
 8000af0:	d80b      	bhi.n	8000b0a <GPIO_IRQConfig+0xf2>
            *NVIC_ICER2 |= (1<<IRQNumber%64);
 8000af2:	4b0a      	ldr	r3, [pc, #40]	; (8000b1c <GPIO_IRQConfig+0x104>)
 8000af4:	681b      	ldr	r3, [r3, #0]
 8000af6:	79fa      	ldrb	r2, [r7, #7]
 8000af8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000afc:	2101      	movs	r1, #1
 8000afe:	fa01 f202 	lsl.w	r2, r1, r2
 8000b02:	4611      	mov	r1, r2
 8000b04:	4a05      	ldr	r2, [pc, #20]	; (8000b1c <GPIO_IRQConfig+0x104>)
 8000b06:	430b      	orrs	r3, r1
 8000b08:	6013      	str	r3, [r2, #0]
}
 8000b0a:	bf00      	nop
 8000b0c:	3708      	adds	r7, #8
 8000b0e:	46bd      	mov	sp, r7
 8000b10:	bd80      	pop	{r7, pc}
 8000b12:	bf00      	nop
 8000b14:	e000e100 	.word	0xe000e100
 8000b18:	e000e104 	.word	0xe000e104
 8000b1c:	e000e108 	.word	0xe000e108
 8000b20:	e000e180 	.word	0xe000e180

08000b24 <GPIO_IRQPriorityConfig>:

/// @brief Interrupt priority config
/// @param IRQNumber 
/// @param IRQPriority 
void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint8_t IRQPriority)
{
 8000b24:	b480      	push	{r7}
 8000b26:	b085      	sub	sp, #20
 8000b28:	af00      	add	r7, sp, #0
 8000b2a:	4603      	mov	r3, r0
 8000b2c:	460a      	mov	r2, r1
 8000b2e:	71fb      	strb	r3, [r7, #7]
 8000b30:	4613      	mov	r3, r2
 8000b32:	71bb      	strb	r3, [r7, #6]
    uint32_t ipr_field = IRQNumber/4;
 8000b34:	79fb      	ldrb	r3, [r7, #7]
 8000b36:	089b      	lsrs	r3, r3, #2
 8000b38:	b2db      	uxtb	r3, r3
 8000b3a:	60fb      	str	r3, [r7, #12]
    uint32_t ipr_section = IRQNumber%4;
 8000b3c:	79fb      	ldrb	r3, [r7, #7]
 8000b3e:	f003 0303 	and.w	r3, r3, #3
 8000b42:	60bb      	str	r3, [r7, #8]
    *(NVIC_IPR_BASE_ADD+(ipr_field*4)) |= (IRQPriority<<(8*ipr_section));
 8000b44:	68fb      	ldr	r3, [r7, #12]
 8000b46:	011b      	lsls	r3, r3, #4
 8000b48:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000b4c:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000b50:	681a      	ldr	r2, [r3, #0]
 8000b52:	79b9      	ldrb	r1, [r7, #6]
 8000b54:	68bb      	ldr	r3, [r7, #8]
 8000b56:	00db      	lsls	r3, r3, #3
 8000b58:	fa01 f303 	lsl.w	r3, r1, r3
 8000b5c:	4619      	mov	r1, r3
 8000b5e:	68fb      	ldr	r3, [r7, #12]
 8000b60:	011b      	lsls	r3, r3, #4
 8000b62:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000b66:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000b6a:	430a      	orrs	r2, r1
 8000b6c:	601a      	str	r2, [r3, #0]

}
 8000b6e:	bf00      	nop
 8000b70:	3714      	adds	r7, #20
 8000b72:	46bd      	mov	sp, r7
 8000b74:	bc80      	pop	{r7}
 8000b76:	4770      	bx	lr

08000b78 <GPIO_IRQHandler>:


/// @brief 
/// @param PinNumber 
void GPIO_IRQHandler(uint8_t PinNumber)
{
 8000b78:	b480      	push	{r7}
 8000b7a:	b083      	sub	sp, #12
 8000b7c:	af00      	add	r7, sp, #0
 8000b7e:	4603      	mov	r3, r0
 8000b80:	71fb      	strb	r3, [r7, #7]

    // clear the pr register
    if(EXTI->exti_PR & (1<<PinNumber))
 8000b82:	4b0c      	ldr	r3, [pc, #48]	; (8000bb4 <GPIO_IRQHandler+0x3c>)
 8000b84:	695b      	ldr	r3, [r3, #20]
 8000b86:	79fa      	ldrb	r2, [r7, #7]
 8000b88:	2101      	movs	r1, #1
 8000b8a:	fa01 f202 	lsl.w	r2, r1, r2
 8000b8e:	4013      	ands	r3, r2
 8000b90:	2b00      	cmp	r3, #0
 8000b92:	d009      	beq.n	8000ba8 <GPIO_IRQHandler+0x30>
    {
        EXTI->exti_PR |= (1<<PinNumber);
 8000b94:	4b07      	ldr	r3, [pc, #28]	; (8000bb4 <GPIO_IRQHandler+0x3c>)
 8000b96:	695b      	ldr	r3, [r3, #20]
 8000b98:	79fa      	ldrb	r2, [r7, #7]
 8000b9a:	2101      	movs	r1, #1
 8000b9c:	fa01 f202 	lsl.w	r2, r1, r2
 8000ba0:	4611      	mov	r1, r2
 8000ba2:	4a04      	ldr	r2, [pc, #16]	; (8000bb4 <GPIO_IRQHandler+0x3c>)
 8000ba4:	430b      	orrs	r3, r1
 8000ba6:	6153      	str	r3, [r2, #20]
    }

 8000ba8:	bf00      	nop
 8000baa:	370c      	adds	r7, #12
 8000bac:	46bd      	mov	sp, r7
 8000bae:	bc80      	pop	{r7}
 8000bb0:	4770      	bx	lr
 8000bb2:	bf00      	nop
 8000bb4:	40010400 	.word	0x40010400

08000bb8 <GPIOC_Init>:
	return;
}


void GPIOC_Init(void)
{
 8000bb8:	b580      	push	{r7, lr}
 8000bba:	b086      	sub	sp, #24
 8000bbc:	af00      	add	r7, sp, #0
	GPIO_Handler_t GPIOB_conf;
	GPIO_Handler_t GPIOC_conf;

	GPIOB_conf.GPIO_PinCOnfig.PinNumber = 0;
 8000bbe:	2300      	movs	r3, #0
 8000bc0:	743b      	strb	r3, [r7, #16]
	GPIOB_conf.GPIO_PinCOnfig.PinMode = IT_RT;
 8000bc2:	2304      	movs	r3, #4
 8000bc4:	747b      	strb	r3, [r7, #17]
	GPIOB_conf.GPIO_PinCOnfig.PinSpeed = MHz_50;
 8000bc6:	2303      	movs	r3, #3
 8000bc8:	74bb      	strb	r3, [r7, #18]
	GPIOB_conf.pGPIOx = GPIOB;
 8000bca:	4b12      	ldr	r3, [pc, #72]	; (8000c14 <GPIOC_Init+0x5c>)
 8000bcc:	60fb      	str	r3, [r7, #12]

	// Enable IRQ exti0 line
	GPIO_IRQConfig(6, 1, ENABLE);
 8000bce:	2201      	movs	r2, #1
 8000bd0:	2101      	movs	r1, #1
 8000bd2:	2006      	movs	r0, #6
 8000bd4:	f7ff ff20 	bl	8000a18 <GPIO_IRQConfig>

	// enable portc clock
	GPIOClockControl(GPIOB,ENABLE);
 8000bd8:	2101      	movs	r1, #1
 8000bda:	480e      	ldr	r0, [pc, #56]	; (8000c14 <GPIOC_Init+0x5c>)
 8000bdc:	f7ff fac8 	bl	8000170 <GPIOClockControl>
	GPIOClockControl(GPIOC,ENABLE);
 8000be0:	2101      	movs	r1, #1
 8000be2:	480d      	ldr	r0, [pc, #52]	; (8000c18 <GPIOC_Init+0x60>)
 8000be4:	f7ff fac4 	bl	8000170 <GPIOClockControl>

	GPIOInit(&GPIOB_conf);
 8000be8:	f107 030c 	add.w	r3, r7, #12
 8000bec:	4618      	mov	r0, r3
 8000bee:	f7ff fb79 	bl	80002e4 <GPIOInit>

	GPIOC_conf.GPIO_PinCOnfig.PinNumber = 13;
 8000bf2:	230d      	movs	r3, #13
 8000bf4:	713b      	strb	r3, [r7, #4]
	GPIOC_conf.GPIO_PinCOnfig.PinMode = output_push_pull;
 8000bf6:	2300      	movs	r3, #0
 8000bf8:	717b      	strb	r3, [r7, #5]
	GPIOC_conf.GPIO_PinCOnfig.PinSpeed = MHz_50;
 8000bfa:	2303      	movs	r3, #3
 8000bfc:	71bb      	strb	r3, [r7, #6]
	GPIOC_conf.pGPIOx = GPIOC;
 8000bfe:	4b06      	ldr	r3, [pc, #24]	; (8000c18 <GPIOC_Init+0x60>)
 8000c00:	603b      	str	r3, [r7, #0]
	GPIOInit(&GPIOC_conf);
 8000c02:	463b      	mov	r3, r7
 8000c04:	4618      	mov	r0, r3
 8000c06:	f7ff fb6d 	bl	80002e4 <GPIOInit>


}
 8000c0a:	bf00      	nop
 8000c0c:	3718      	adds	r7, #24
 8000c0e:	46bd      	mov	sp, r7
 8000c10:	bd80      	pop	{r7, pc}
 8000c12:	bf00      	nop
 8000c14:	40010c00 	.word	0x40010c00
 8000c18:	40011000 	.word	0x40011000

08000c1c <main>:

uint8_t value = 0;

int main(void)
{
 8000c1c:	b580      	push	{r7, lr}
 8000c1e:	b082      	sub	sp, #8
 8000c20:	af00      	add	r7, sp, #0
	// SystickEnable();
	GPIOC_Init();
 8000c22:	f7ff ffc9 	bl	8000bb8 <GPIOC_Init>
//
//		if (value == 1)
//		{
//			GPIOWrite(GPIOC, 13, SET);

			GPIOToggle(GPIOC, 13);
 8000c26:	210d      	movs	r1, #13
 8000c28:	4808      	ldr	r0, [pc, #32]	; (8000c4c <main+0x30>)
 8000c2a:	f7ff fee1 	bl	80009f0 <GPIOToggle>
			GPIOToggle(GPIOB, 0);
 8000c2e:	2100      	movs	r1, #0
 8000c30:	4807      	ldr	r0, [pc, #28]	; (8000c50 <main+0x34>)
 8000c32:	f7ff fedd 	bl	80009f0 <GPIOToggle>
//		{
//			GPIOWrite(GPIOC, 13, RESET);
//		}
//		GPIOWrite(GPIOB, 0, SET);
//
		for(int i=0;i<666666;i++)
 8000c36:	2300      	movs	r3, #0
 8000c38:	607b      	str	r3, [r7, #4]
 8000c3a:	e002      	b.n	8000c42 <main+0x26>
 8000c3c:	687b      	ldr	r3, [r7, #4]
 8000c3e:	3301      	adds	r3, #1
 8000c40:	607b      	str	r3, [r7, #4]
 8000c42:	687b      	ldr	r3, [r7, #4]
 8000c44:	4a03      	ldr	r2, [pc, #12]	; (8000c54 <main+0x38>)
 8000c46:	4293      	cmp	r3, r2
 8000c48:	ddf8      	ble.n	8000c3c <main+0x20>
			GPIOToggle(GPIOC, 13);
 8000c4a:	e7ec      	b.n	8000c26 <main+0xa>
 8000c4c:	40011000 	.word	0x40011000
 8000c50:	40010c00 	.word	0x40010c00
 8000c54:	000a2c29 	.word	0x000a2c29

08000c58 <SysTick_Handler>:


/// @brief systick interrupt handler
/// @param  void
void SysTick_Handler(void)
{
 8000c58:	b480      	push	{r7}
 8000c5a:	af00      	add	r7, sp, #0
	count++;
 8000c5c:	4b04      	ldr	r3, [pc, #16]	; (8000c70 <SysTick_Handler+0x18>)
 8000c5e:	681b      	ldr	r3, [r3, #0]
 8000c60:	3301      	adds	r3, #1
 8000c62:	4a03      	ldr	r2, [pc, #12]	; (8000c70 <SysTick_Handler+0x18>)
 8000c64:	6013      	str	r3, [r2, #0]
}
 8000c66:	bf00      	nop
 8000c68:	46bd      	mov	sp, r7
 8000c6a:	bc80      	pop	{r7}
 8000c6c:	4770      	bx	lr
 8000c6e:	bf00      	nop
 8000c70:	2000001c 	.word	0x2000001c

08000c74 <EXTI0_IRQHandler>:


void EXTI0_IRQHandler(void)
{
 8000c74:	b580      	push	{r7, lr}
 8000c76:	af00      	add	r7, sp, #0
	// check the pr
	GPIO_IRQHandler(0);
 8000c78:	2000      	movs	r0, #0
 8000c7a:	f7ff ff7d 	bl	8000b78 <GPIO_IRQHandler>
}
 8000c7e:	bf00      	nop
 8000c80:	bd80      	pop	{r7, pc}
	...

08000c84 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
   ldr   r0, =_estack
 8000c84:	480d      	ldr	r0, [pc, #52]	; (8000cbc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000c86:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000c88:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000c8c:	480c      	ldr	r0, [pc, #48]	; (8000cc0 <LoopForever+0x6>)
  ldr r1, =_edata
 8000c8e:	490d      	ldr	r1, [pc, #52]	; (8000cc4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000c90:	4a0d      	ldr	r2, [pc, #52]	; (8000cc8 <LoopForever+0xe>)
  movs r3, #0
 8000c92:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000c94:	e002      	b.n	8000c9c <LoopCopyDataInit>

08000c96 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000c96:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000c98:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000c9a:	3304      	adds	r3, #4

08000c9c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000c9c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000c9e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000ca0:	d3f9      	bcc.n	8000c96 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000ca2:	4a0a      	ldr	r2, [pc, #40]	; (8000ccc <LoopForever+0x12>)
  ldr r4, =_ebss
 8000ca4:	4c0a      	ldr	r4, [pc, #40]	; (8000cd0 <LoopForever+0x16>)
  movs r3, #0
 8000ca6:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000ca8:	e001      	b.n	8000cae <LoopFillZerobss>

08000caa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000caa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000cac:	3204      	adds	r2, #4

08000cae <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000cae:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000cb0:	d3fb      	bcc.n	8000caa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000cb2:	f000 f811 	bl	8000cd8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000cb6:	f7ff ffb1 	bl	8000c1c <main>

08000cba <LoopForever>:

LoopForever:
  b LoopForever
 8000cba:	e7fe      	b.n	8000cba <LoopForever>
   ldr   r0, =_estack
 8000cbc:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8000cc0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000cc4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000cc8:	08000d40 	.word	0x08000d40
  ldr r2, =_sbss
 8000ccc:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000cd0:	20000020 	.word	0x20000020

08000cd4 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000cd4:	e7fe      	b.n	8000cd4 <ADC1_2_IRQHandler>
	...

08000cd8 <__libc_init_array>:
 8000cd8:	b570      	push	{r4, r5, r6, lr}
 8000cda:	2600      	movs	r6, #0
 8000cdc:	4d0c      	ldr	r5, [pc, #48]	; (8000d10 <__libc_init_array+0x38>)
 8000cde:	4c0d      	ldr	r4, [pc, #52]	; (8000d14 <__libc_init_array+0x3c>)
 8000ce0:	1b64      	subs	r4, r4, r5
 8000ce2:	10a4      	asrs	r4, r4, #2
 8000ce4:	42a6      	cmp	r6, r4
 8000ce6:	d109      	bne.n	8000cfc <__libc_init_array+0x24>
 8000ce8:	f000 f81a 	bl	8000d20 <_init>
 8000cec:	2600      	movs	r6, #0
 8000cee:	4d0a      	ldr	r5, [pc, #40]	; (8000d18 <__libc_init_array+0x40>)
 8000cf0:	4c0a      	ldr	r4, [pc, #40]	; (8000d1c <__libc_init_array+0x44>)
 8000cf2:	1b64      	subs	r4, r4, r5
 8000cf4:	10a4      	asrs	r4, r4, #2
 8000cf6:	42a6      	cmp	r6, r4
 8000cf8:	d105      	bne.n	8000d06 <__libc_init_array+0x2e>
 8000cfa:	bd70      	pop	{r4, r5, r6, pc}
 8000cfc:	f855 3b04 	ldr.w	r3, [r5], #4
 8000d00:	4798      	blx	r3
 8000d02:	3601      	adds	r6, #1
 8000d04:	e7ee      	b.n	8000ce4 <__libc_init_array+0xc>
 8000d06:	f855 3b04 	ldr.w	r3, [r5], #4
 8000d0a:	4798      	blx	r3
 8000d0c:	3601      	adds	r6, #1
 8000d0e:	e7f2      	b.n	8000cf6 <__libc_init_array+0x1e>
 8000d10:	08000d38 	.word	0x08000d38
 8000d14:	08000d38 	.word	0x08000d38
 8000d18:	08000d38 	.word	0x08000d38
 8000d1c:	08000d3c 	.word	0x08000d3c

08000d20 <_init>:
 8000d20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d22:	bf00      	nop
 8000d24:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d26:	bc08      	pop	{r3}
 8000d28:	469e      	mov	lr, r3
 8000d2a:	4770      	bx	lr

08000d2c <_fini>:
 8000d2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d2e:	bf00      	nop
 8000d30:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d32:	bc08      	pop	{r3}
 8000d34:	469e      	mov	lr, r3
 8000d36:	4770      	bx	lr
